{"version":3,"sources":["./src/app/pages/integration/integration.page.html","./src/app/pages/integration/integration-routing.module.ts","./src/app/pages/integration/integration.module.ts","./src/app/pages/integration/integration.page.scss","./src/app/pages/integration/integration.page.ts"],"names":[],"mappings":"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","file":"pages-integration-integration-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      Integrações\\n    </ion-title>\\n  </ion-toolbar>\\n\\n  <ion-toolbar *ngIf=\\\"tasks.length > 0\\\">\\n    <ion-item *ngIf=\\\"selectedTasks.length == 0\\\" lines=\\\"none\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"runOnce()\\\">\\n          <ion-icon  name=\\\"cloud-upload\\\" slot=\\\"start\\\" color=\\\"primary\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-label text-wrap class=\\\"text-center\\\">Clique nas tarefas abaixo para selecioná-las</ion-label>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"selectedTasks.length == 1\\\" lines=\\\"none\\\">\\n      <ion-icon (click)=\\\"deleteTasks()\\\" color=\\\"danger\\\" slot=\\\"start\\\" src=\\\"./assets/icons/elo-trash.svg\\\">\\n      </ion-icon>\\n      <ion-label text-wrap class=\\\"text-center\\\">{{selectedTasks.length}} tarefa selecionada</ion-label>\\n      <ion-icon (click)=\\\"unSelectTasks()\\\" slot=\\\"end\\\" name=\\\"close-outline\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"selectedTasks.length > 1\\\" lines=\\\"none\\\">\\n      <ion-icon (click)=\\\"deleteTasks()\\\" color=\\\"danger\\\" slot=\\\"start\\\" src=\\\"./assets/icons/elo-trash.svg\\\">\\n      </ion-icon>\\n      <ion-label text-wrap class=\\\"text-center\\\">{{selectedTasks.length}} tarefas selecionadas</ion-label>\\n      <ion-icon (click)=\\\"unSelectTasks()\\\" slot=\\\"end\\\" name=\\\"close-outline\\\"></ion-icon>\\n    </ion-item>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n\\n<ion-content color=\\\"light\\\">\\n  <ion-progress-bar color=\\\"dark\\\" *ngIf=\\\"loading\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n\\n\\n\\n  <ion-card *ngIf=\\\"getEncodedTasks().length == 0 && !loading\\\">\\n    <ion-card-content>\\n      <div class=\\\"text-center\\\">\\n        <ion-img class=\\\"h-40\\\" src=\\\"../../assets/integration.svg\\\"></ion-img>\\n\\n        <ion-text color=\\\"dark\\\">\\n          <p><strong class=\\\"text-xl\\\">No hay más Despesas por sincronizar.</strong></p>\\n        </ion-text>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-grid style=\\\"--ion-grid-padding: 0px;\\\">\\n\\n    <ng-container>\\n\\n      <ng-container *ngFor=\\\"let task of tasks; let i = index\\\">\\n        <ion-card [disabled]=\\\"loading\\\" (click)=\\\"selectTask(task)\\\" color=\\\"{{isSelected(task)}}\\\">\\n          <ion-item color=\\\"{{isSelected(task)}}\\\" lines=\\\"none\\\">\\n            <ion-icon class=\\\"text-5xl\\\" slot=\\\"start\\\" [color]=\\\"getColor(task.name)\\\" [src]=\\\"getIcon(task.name)\\\"></ion-icon>\\n            <ion-label>\\n              <h3 *ngIf=\\\"task?.data?.id\\\">\\n                Id: {{task?.data?.id}}\\n              </h3>\\n              <p>\\n                Tipo: {{getType(task.name)}}\\n              </p>\\n              <p>\\n                Tentativas: {{task.tries}}\\n              </p>\\n              <p>\\n                Ult. Tentativa: {{task.lastExecuted?.replace(' ', 'T') | dateTimeFormat}}\\n              </p>\\n            </ion-label>\\n            <ion-badge *ngIf=\\\"task.tries > 0\\\" color=\\\"danger\\\" slot=\\\"end\\\">Erro</ion-badge>\\n          </ion-item>\\n        </ion-card>\\n      </ng-container>\\n\\n    </ng-container>\\n\\n\\n  </ion-grid>\\n\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IntegrationPage } from './integration.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IntegrationPage\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class IntegrationPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IntegrationPageRoutingModule } from './integration-routing.module';\n\nimport { IntegrationPage } from './integration.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        IntegrationPageRoutingModule,\n        PipesModule\n    ],\n    declarations: [IntegrationPage]\n})\nexport class IntegrationPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ludGVncmF0aW9uL2ludGVncmF0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DateTimeFormatPipe } from 'src/app/pipes/date-time-format.pipe';\n\n@Component({\n    selector: 'app-integration',\n    templateUrl: './integration.page.html',\n    styleUrls: ['./integration.page.scss'],\n})\nexport class IntegrationPage implements OnInit, OnDestroy {\n  public loading = false;\n  public hasData = true;\n  public selectedTasks = [];\n  public tasks = [];\n  public interval;\n\n  public skeletonCards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  public constructor(\n\n  ) { }\n\n  public ngOnInit() {\n      this.loading = true;\n      this.getTasks();\n  }\n\n  public getTasks() {\n      this.tasks = [];\n\n      this.loading = false;\n  }\n\n  public getEncodedTasks() {\n      return this.tasks;\n  }\n\n  public getType(name) {\n      switch (name) {\n          case 'tenancies/:tenancy_id/transport-tasks/program-confirm':\n              return 'Nova Tarefa';\n          case 'tenancies/:tenancy_id/transport-tasks/execute':\n              return 'Tarefa';\n          case 'tenancies/:tenancy_id/transport-tasks/cancel':\n              return 'Não Execução';\n          case 'tenancies/:tenancy_id/waste-movements':\n              return 'Inventário';\n          default:\n              return '';\n      }\n  }\n\n  public getIcon(name) {\n      switch (name) {\n          case 'tenancies/:tenancy_id/transport-tasks/program-confirm':\n              return './assets/icons/elo-collect.svg';\n          case 'tenancies/:tenancy_id/transport-tasks/execute':\n              return './assets/icons/elo-task.svg';\n          case 'tenancies/:tenancy_id/transport-tasks/cancel':\n              return './assets/icons/elo-close.svg';\n          case 'tenancies/:tenancy_id/waste-movements':\n              return './assets/icons/elo-waste.svg';\n      }\n  }\n\n  public getColor(name) {\n      if (name === 'tenancies/:tenancy_id/transport-tasks/cancel') {\n          return 'danger';\n      }\n\n      return 'primary';\n  }\n\n  public async deleteTasks() {\n      this.loading = true;\n\n      const idsToDelete = [];\n\n      this.selectedTasks.forEach((task) => {\n          idsToDelete.push(task.id);\n      });\n  }\n\n  public unSelectTasks() {\n      this.selectedTasks = [];\n      this.loading = false;\n  }\n\n  public selectTask(task) {\n      if (this.isSelected(task)) {\n          const taskIndex = this.selectedTasks.findIndex((taskToFind => taskToFind.id == task.id));\n\n          this.selectedTasks.splice(taskIndex, 1);\n      } else {\n          this.selectedTasks.push(task);\n      }\n  }\n\n  public isSelected(task) {\n      const tasker = this.selectedTasks.find(taskToFind => taskToFind.id == task.id);\n\n      if (tasker) {\n          return 'medium';\n      } else {\n          return '';\n      }\n  }\n\n  public runOnce() {\n      this.loading = true;\n  }\n\n  public addToActionHistory(task) {\n\n  }\n\n  public ngOnDestroy() {\n      clearInterval(this.interval);\n  }\n}\n"],"sourceRoot":"webpack:///"}