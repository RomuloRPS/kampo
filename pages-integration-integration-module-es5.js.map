{"version":3,"sources":["src/app/pages/integration/integration.page.html","src/app/pages/integration/integration-routing.module.ts","src/app/pages/integration/integration.module.ts","src/app/pages/integration/integration.page.scss","src/app/pages/integration/integration.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      Integrações\\n    </ion-title>\\n  </ion-toolbar>\\n\\n  <ion-toolbar *ngIf=\\\"tasks.length > 0\\\">\\n    <ion-item *ngIf=\\\"selectedTasks.length == 0\\\" lines=\\\"none\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"runOnce()\\\">\\n          <ion-icon  name=\\\"cloud-upload\\\" slot=\\\"start\\\" color=\\\"primary\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-label text-wrap class=\\\"text-center\\\">Clique nas tarefas abaixo para selecioná-las</ion-label>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"selectedTasks.length == 1\\\" lines=\\\"none\\\">\\n      <ion-icon (click)=\\\"deleteTasks()\\\" color=\\\"danger\\\" slot=\\\"start\\\" src=\\\"./assets/icons/elo-trash.svg\\\">\\n      </ion-icon>\\n      <ion-label text-wrap class=\\\"text-center\\\">{{selectedTasks.length}} tarefa selecionada</ion-label>\\n      <ion-icon (click)=\\\"unSelectTasks()\\\" slot=\\\"end\\\" name=\\\"close-outline\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"selectedTasks.length > 1\\\" lines=\\\"none\\\">\\n      <ion-icon (click)=\\\"deleteTasks()\\\" color=\\\"danger\\\" slot=\\\"start\\\" src=\\\"./assets/icons/elo-trash.svg\\\">\\n      </ion-icon>\\n      <ion-label text-wrap class=\\\"text-center\\\">{{selectedTasks.length}} tarefas selecionadas</ion-label>\\n      <ion-icon (click)=\\\"unSelectTasks()\\\" slot=\\\"end\\\" name=\\\"close-outline\\\"></ion-icon>\\n    </ion-item>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n\\n<ion-content color=\\\"light\\\">\\n  <ion-progress-bar color=\\\"dark\\\" *ngIf=\\\"loading\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n\\n\\n\\n  <ion-card *ngIf=\\\"getEncodedTasks().length == 0 && !loading\\\">\\n    <ion-card-content>\\n      <div class=\\\"text-center\\\">\\n        <ion-img class=\\\"h-40\\\" src=\\\"./assets/integration.svg\\\"></ion-img>\\n\\n        <ion-text color=\\\"dark\\\">\\n          <p><strong class=\\\"text-xl\\\">No hay más Despesas por sincronizar.</strong></p>\\n        </ion-text>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-grid style=\\\"--ion-grid-padding: 0px;\\\">\\n\\n    <ng-container>\\n\\n      <ng-container *ngFor=\\\"let task of tasks; let i = index\\\">\\n        <ion-card [disabled]=\\\"loading\\\" (click)=\\\"selectTask(task)\\\" color=\\\"{{isSelected(task)}}\\\">\\n          <ion-item color=\\\"{{isSelected(task)}}\\\" lines=\\\"none\\\">\\n            <ion-icon class=\\\"text-5xl\\\" slot=\\\"start\\\" [color]=\\\"getColor(task.name)\\\" [src]=\\\"getIcon(task.name)\\\"></ion-icon>\\n            <ion-label>\\n              <h3 *ngIf=\\\"task?.data?.id\\\">\\n                Id: {{task?.data?.id}}\\n              </h3>\\n              <p>\\n                Tipo: {{getType(task.name)}}\\n              </p>\\n              <p>\\n                Tentativas: {{task.tries}}\\n              </p>\\n              <p>\\n                Ult. Tentativa: {{task.lastExecuted?.replace(' ', 'T') | dateTimeFormat}}\\n              </p>\\n            </ion-label>\\n            <ion-badge *ngIf=\\\"task.tries > 0\\\" color=\\\"danger\\\" slot=\\\"end\\\">Erro</ion-badge>\\n          </ion-item>\\n        </ion-card>\\n      </ng-container>\\n\\n    </ng-container>\\n\\n\\n  </ion-grid>\\n\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IntegrationPage } from './integration.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IntegrationPage\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class IntegrationPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IntegrationPageRoutingModule } from './integration-routing.module';\n\nimport { IntegrationPage } from './integration.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        IntegrationPageRoutingModule,\n        PipesModule\n    ],\n    declarations: [IntegrationPage]\n})\nexport class IntegrationPageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ludGVncmF0aW9uL2ludGVncmF0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DateTimeFormatPipe } from 'src/app/pipes/date-time-format.pipe';\n\n@Component({\n    selector: 'app-integration',\n    templateUrl: './integration.page.html',\n    styleUrls: ['./integration.page.scss'],\n})\nexport class IntegrationPage implements OnInit, OnDestroy {\n  public loading = false;\n  public hasData = true;\n  public selectedTasks = [];\n  public tasks = [];\n  public interval;\n\n  public skeletonCards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  public constructor(\n\n  ) { }\n\n  public ngOnInit() {\n      this.loading = true;\n      this.getTasks();\n  }\n\n  public getTasks() {\n      this.tasks = [];\n\n      this.loading = false;\n  }\n\n  public getEncodedTasks() {\n      return this.tasks;\n  }\n\n  public getType(name) {\n      switch (name) {\n          case 'tenancies/:tenancy_id/transport-tasks/program-confirm':\n              return 'Nova Tarefa';\n          case 'tenancies/:tenancy_id/transport-tasks/execute':\n              return 'Tarefa';\n          case 'tenancies/:tenancy_id/transport-tasks/cancel':\n              return 'Não Execução';\n          case 'tenancies/:tenancy_id/waste-movements':\n              return 'Inventário';\n          default:\n              return '';\n      }\n  }\n\n  public getIcon(name) {\n      switch (name) {\n          case 'tenancies/:tenancy_id/transport-tasks/program-confirm':\n              return './assets/icons/elo-collect.svg';\n          case 'tenancies/:tenancy_id/transport-tasks/execute':\n              return './assets/icons/elo-task.svg';\n          case 'tenancies/:tenancy_id/transport-tasks/cancel':\n              return './assets/icons/elo-close.svg';\n          case 'tenancies/:tenancy_id/waste-movements':\n              return './assets/icons/elo-waste.svg';\n      }\n  }\n\n  public getColor(name) {\n      if (name === 'tenancies/:tenancy_id/transport-tasks/cancel') {\n          return 'danger';\n      }\n\n      return 'primary';\n  }\n\n  public async deleteTasks() {\n      this.loading = true;\n\n      const idsToDelete = [];\n\n      this.selectedTasks.forEach((task) => {\n          idsToDelete.push(task.id);\n      });\n  }\n\n  public unSelectTasks() {\n      this.selectedTasks = [];\n      this.loading = false;\n  }\n\n  public selectTask(task) {\n      if (this.isSelected(task)) {\n          const taskIndex = this.selectedTasks.findIndex((taskToFind => taskToFind.id == task.id));\n\n          this.selectedTasks.splice(taskIndex, 1);\n      } else {\n          this.selectedTasks.push(task);\n      }\n  }\n\n  public isSelected(task) {\n      const tasker = this.selectedTasks.find(taskToFind => taskToFind.id == task.id);\n\n      if (tasker) {\n          return 'medium';\n      } else {\n          return '';\n      }\n  }\n\n  public runOnce() {\n      this.loading = true;\n  }\n\n  public addToActionHistory(task) {\n\n  }\n\n  public ngOnDestroy() {\n      clearInterval(this.interval);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-integration-integration-module-es5.js"}